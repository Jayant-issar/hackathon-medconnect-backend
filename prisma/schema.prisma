// This is your Prisma schema file
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Hospital model matching your existing structure
model Hospital {
  id        String   @id @default(cuid())
  name      String
  address   String
  phone     String
  latitude  Float
  longitude Float
  
  
  beds      BedInformation[]     // Will store array of bed information

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Blood Bank model matching your existing structure
model BloodBank {
  id        String   @id @default(cuid())
  name      String
  address   String
  phone     String
  latitude  Float
  longitude Float
  
  
  inventory BloodInventory[]     // Will store array of blood inventory

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id            String    @id @default(cuid())
  clerkId       String
  email         String    @unique
  password      String?    
  name          String?
  role          UserRole  @default(USER)
  emergencies   Emergency[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

}

model Emergency {
  id              String    @id @default(cuid())
  name            String
  location        String
  hospitalName    String?
  contactName     String
  contactPhone    String
  urgencyLevel    String
  description     String?
  userId          String
  user            User @relation(fields: [userId], references: [id])
}

model BloodInventory {
  id String @id @default(cuid())
  bloodGroup BloodGroup
  units Int
  bloodBankId String
  updatedAt DateTime @updatedAt

  BloodBank BloodBank @relation(fields: [bloodBankId], references: [id])
}

model BedInformation {
  id String @id @default(cuid())
  type BedType
  available Int
  total Int

  updatedAt DateTime @updatedAt

  Hospital Hospital[]
}
// Simple enum for user roles
enum UserRole {
  USER
  ADMIN
}



enum BloodGroup {
  A_POSITIVE
  A_NEGATIVE
  B_POSITIVE
  B_NEGATIVE
  AB_POSITIVE
  AB_NEGATIVE
  O_POSITIVE
  O_NEGATIVE
}

enum BedType {
  ICU
  General
  Emergency
  Pediatric
}